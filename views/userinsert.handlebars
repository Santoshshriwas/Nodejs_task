<style>
  /* style.css */

/* Reset some default styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  line-height: 1.6;
}

/* Header styling */
header {
  background: #333;
  color: #fff;
  padding: 1rem 0;
}

nav ul {
  display: flex;
  justify-content: center;
  list-style: none;
}

nav ul li {
  margin: 0 1rem;
}

nav ul li a {
  color: #fff;
  text-decoration: none;
}

nav ul li a:hover {
  text-decoration: underline;
}

/* Main content styling */
main {
  padding: 2rem;
}

/* Form styling */
form {
  max-width: 500px;
  margin: 0 auto;
  padding: 1rem;
  border: 1px solid #ccc;
  border-radius: 5px;
  background: #f9f9f9;
}

form label {
  display: block;
  margin-bottom: 0.5rem;
}

form input {
  width: 100%;
  padding: 0.5rem;
  margin-bottom: 1rem;
  border: 1px solid #ccc;
  border-radius: 5px;
}

form button {
  display: block;
  width: 100%;
  padding: 0.75rem;
  border: none;
  border-radius: 5px;
  background: #333;
  color: #fff;
  font-size: 1rem;
  cursor: pointer;
}

form button:hover {
  background: #555;
}

/* Footer styling */
footer {
  background: #333;
  color: #fff;
  text-align: center;
  padding: 1rem 0;
  position: fixed;
  bottom: 0;
  width: 100%;
}
.user{
  display: flex;

  justify-content: center;
}

/* Media queries for responsiveness */
@media (max-width: 768px) {
  nav ul {
    flex-direction: column;
  }

  nav ul li {
    margin: 0.5rem 0;
  }

  main {
    padding: 1rem;
  }

  form {
    padding: 0.5rem;
  }

  footer {
    position: static;
    padding: 1rem;
  }
}
</style>
<h1 class="user">User Insert</h1>

{{!-- <form action="/users/insert" method="POST">
  <label for="name">Username:</label>
  <input type="text" id="name" name="name" required>
  <label for="email">Email:</label>
  <input type="email" id="email" name="email" required>
  <label for="mobile">Mobile:</label>
  <input type="text" id="mobile" name="mobile" required>
  <button type="submit">Insert User</button>
</form> --}}
<form id="userForm" action="/users/insert" method="POST">
  <label for="name">Username:</label>
  <input type="text" id="name" name="name" required minlength="3" maxlength="50" 
         placeholder="Enter your username" 
         title="Username should be between 3 and 50 characters long">
  
  <label for="email">Email:</label>
  <input type="email" id="email" name="email" required 
         placeholder="Enter your email address" 
         title="Please enter a valid email address">
  
  <label for="mobile">Mobile:</label>
  <input type="text" id="mobile" name="mobile" required pattern="[0-9]{10}" 
         placeholder="Enter your 10-digit mobile number" 
         title="Mobile number should be exactly 10 digits">
  
  <button type="submit">Insert User</button>
</form>
<script>
document.getElementById('userForm').addEventListener('submit', function(event) {
  let isValid = true;
  
  // Get form field values
  const name = document.getElementById('name').value.trim();
  const email = document.getElementById('email').value.trim();
  const mobile = document.getElementById('mobile').value.trim();
  
  // Clear previous error messages
  document.querySelectorAll('.error-message').forEach(element => element.remove());

  // Validate username
  if (name.length < 3 || name.length > 50) {
    showError('name', 'Username should be between 3 and 50 characters long');
    isValid = false;
  }

  // Validate email
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(email)) {
    showError('email', 'Please enter a valid email address');
    isValid = false;
  }

  // Validate mobile number
  const mobileRegex = /^[0-9]{10}$/;
  if (!mobileRegex.test(mobile)) {
    showError('mobile', 'Mobile number should be exactly 10 digits');
    isValid = false;
  }

  // Prevent form submission if invalid
  if (!isValid) {
    event.preventDefault();
  }
});

// Function to show error message
function showError(fieldId, message) {
  const field = document.getElementById(fieldId);
  const error = document.createElement('div');
  error.className = 'error-message';
  error.style.color = 'red';
  error.style.marginBottom = '1rem';
  error.textContent = message;
  field.parentElement.insertBefore(error, field.nextSibling);
}
</script>
